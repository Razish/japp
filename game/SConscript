import os
Import( '*' )

# environment
build_dir = 'build' + os.sep\
	+ configuration + os.sep\
	+ realcc + os.sep\
	+ str(bits) + os.sep\
	+ 'game' + os.sep
env.VariantDir(
	build_dir,
	'#',
	duplicate = 0
)
game_env = env.Clone()

# sources
files = [
	'game/ai_main.cpp',
	'game/ai_util.cpp',
	'game/ai_wpnav.cpp',
	'game/AnimalNPC.cpp',
	'game/bg_animTable.cpp',
	'game/bg_g2_utils.cpp',
	'game/bg_lua.cpp',
	'game/bg_luacvar.cpp',
	'game/bg_luaentity.cpp',
	'game/bg_luaevent.cpp',
	'game/bg_luafs.cpp',
	'game/bg_lualogger.cpp',
	'game/bg_luaplayer.cpp',
	'game/bg_luaserialiser.cpp',
	'game/bg_luavector.cpp',
	'game/bg_misc.cpp',
	'game/bg_panimate.cpp',
	'game/bg_pmove.cpp',
	'game/bg_saber.cpp',
	'game/bg_saberLoad.cpp',
	'game/bg_saga.cpp',
	'game/bg_slidemove.cpp',
	'game/bg_vehicleLoad.cpp',
	'game/bg_weapons.cpp',
	'game/FighterNPC.cpp',
	'game/g_active.cpp',
	'game/g_admin.cpp',
	'game/g_arenas.cpp',
	'game/g_bot.cpp',
	'game/g_chatFilters.cpp',
	'game/g_client.cpp',
	'game/g_clientModification.cpp',
	'game/g_cmds.cpp',
	'game/g_combat.cpp',
	'game/g_exphysics.cpp',
    'game/g_geoip.cpp',
	'game/g_ICARUScb.cpp',
	'game/g_items.cpp',
	'game/g_log.cpp',
	'game/g_luamysql.cpp',
	'game/g_luasqlite.cpp',
	'game/g_luaweapon.cpp',
	'game/g_main.cpp',
	'game/g_mem.cpp',
	'game/g_misc.cpp',
	'game/g_missile.cpp',
	'game/g_mover.cpp',
	'game/g_nav.cpp',
	'game/g_navnew.cpp',
	'game/g_object.cpp',
	'game/g_playerbans.cpp',
	'game/g_saga.cpp',
	'game/g_session.cpp',
	'game/g_smartentities.cpp',
	'game/g_spawn.cpp',
	'game/g_svcmds.cpp',
	'game/g_syscalls.cpp',
	'game/g_target.cpp',
	'game/g_team.cpp',
	'game/g_timer.cpp',
	'game/g_trigger.cpp',
	'game/g_turret.cpp',
	'game/g_turret_G2.cpp',
	'game/g_unlagged.cpp',
	'game/g_utils.cpp',
	'game/g_vehicles.cpp',
	'game/g_vehicleTurret.cpp',
	'game/g_weapon.cpp',
	'game/NPC.cpp',
	'game/NPC_AI_Atst.cpp',
	'game/NPC_AI_Default.cpp',
	'game/NPC_AI_Droid.cpp',
	'game/NPC_AI_GalakMech.cpp',
	'game/NPC_AI_Grenadier.cpp',
	'game/NPC_AI_Howler.cpp',
	'game/NPC_AI_ImperialProbe.cpp',
	'game/NPC_AI_Interrogator.cpp',
	'game/NPC_AI_Jedi.cpp',
	'game/NPC_AI_Mark1.cpp',
	'game/NPC_AI_Mark2.cpp',
	'game/NPC_AI_MineMonster.cpp',
	'game/NPC_AI_Rancor.cpp',
	'game/NPC_AI_Remote.cpp',
	'game/NPC_AI_Seeker.cpp',
	'game/NPC_AI_Sentry.cpp',
	'game/NPC_AI_Sniper.cpp',
	'game/NPC_AI_Stormtrooper.cpp',
	'game/NPC_AI_Utils.cpp',
	'game/NPC_AI_Wampa.cpp',
	'game/NPC_behavior.cpp',
	'game/NPC_combat.cpp',
	'game/NPC_goal.cpp',
	'game/NPC_misc.cpp',
	'game/NPC_move.cpp',
	'game/NPC_reactions.cpp',
	'game/NPC_senses.cpp',
	'game/NPC_sounds.cpp',
	'game/NPC_spawn.cpp',
	'game/NPC_stats.cpp',
	'game/NPC_utils.cpp',
	'game/SpeederNPC.cpp',
	'game/tri_coll_test.cpp',
	'game/w_force.cpp',
	'game/w_saber.cpp',
	'game/WalkerNPC.cpp',
	'JAPP/jp_crash.cpp',
	'JAPP/jp_promode.cpp',
	'JAPP/jp_stack.cpp',
	'JAPP/jp_tokenparser.cpp',
	'qcommon/md5.cpp',
	'qcommon/q_math.cpp',
	'qcommon/q_shared.cpp',
]
files = [build_dir + f for f in files]

# libraries
libraries = [
	'cJSON',
	'lua',
	'semver',
	'maxmind',
]
if no_sql == 0:
	libraries += [
		'sqlite'
	]
if bits == 32:
	libraries += [
		'libudis86'
	]
game_env['LIBS'] += [
	game_env.SConscript(
		'#' + os.sep + lib + os.sep + 'SConscript',
		exports = [
			'arch',
			'bits',
			'build_dir',
			'configuration',
			'env',
			'plat',
			'realcc',
		]
	) for lib in libraries
]
if no_sql == 0:
	if plat == 'Windows':
	    game_env['LIBS'] += [
			'mysqlclient_' + configuration,
		]
	else:
		#FIXME: debug libs?
		game_env['LIBS'] += [
			'mysqlclient',
		]
game_env['LIBS'] += [
	'pthread',
]
if plat == 'Windows':
	game_env['LIBS'] += [
		'advapi32',
		'Shell32',
		'WS2_32',
	]
	if no_crashhandler == 0:
		game_env['LIBS'] += [
			'DbgHelp',
			'Psapi',
			'user32',
		]

# project settings
game_env['CPPPATH'] += [
	'#' + os.sep + 'game'
]
game_env['CPPDEFINES'] += [
	'PROJECT_GAME',
	'JPLUA',
	'LUA_COMPAT_BITLIB',
	'LUA_COMPAT_APIINTCASTS',
]
if plat == 'Linux':
	game_env['CPPDEFINES'] += [
		'LUA_USE_LINUX',
	]
game_env['LIBPREFIX'] = ''

if realcc == 'cl':
	game_env['PDB'] = '#' + os.sep + 'jampgame' + arch + '.pdb'

# targets
game_env.SharedLibrary(
	'#' + os.sep + 'jampgame' + arch,
	files
)
