Import( '*' )

# environment
build_dir = 'build' + '/' + configuration + '/' + env['CC'] + '/' + str(bits) + '/game/'
env.VariantDir( build_dir, '#', duplicate = 0 )
game_env = env.Clone()

# sources
files = [
	'game/ai_main.c',
	'game/ai_util.c',
	'game/ai_wpnav.c',
	'game/AnimalNPC.c',
	'game/bg_g2_utils.c',
	'game/bg_lua.c',
	'game/bg_luacvar.c',
	'game/bg_luaevent.c',
	'game/bg_luafs.c',
	'game/bg_lualogger.c',
	'game/bg_luaplayer.c',
	'game/bg_luaserialiser.c',
	'game/bg_luavector.c',
	'game/bg_misc.c',
	'game/bg_panimate.c',
	'game/bg_pmove.c',
	'game/bg_saber.c',
	'game/bg_saberLoad.c',
	'game/bg_saga.c',
	'game/bg_slidemove.c',
	'game/bg_vehicleLoad.c',
	'game/bg_weapons.c',
	'game/FighterNPC.c',
	'game/g_active.c',
	'game/g_admin.c',
	'game/g_arenas.c',
	'game/g_bot.c',
	'game/g_chatFilters.c',
	'game/g_client.c',
	'game/g_clientModification.c',
	'game/g_cmds.c',
	'game/g_combat.c',
	'game/g_exphysics.c',
	'game/g_ICARUScb.c',
	'game/g_items.c',
	'game/g_log.c',
	'game/g_main.c',
	'game/g_mem.c',
	'game/g_misc.c',
	'game/g_missile.c',
	'game/g_mover.c',
	'game/g_nav.c',
	'game/g_navnew.c',
	'game/g_object.c',
	'game/g_playerbans.c',
	'game/g_saga.c',
	'game/g_session.c',
	'game/g_smartentities.c',
	'game/g_spawn.c',
	'game/g_svcmds.c',
	'game/g_syscalls.c',
	'game/g_target.c',
	'game/g_team.c',
	'game/g_timer.c',
	'game/g_trigger.c',
	'game/g_turret.c',
	'game/g_turret_G2.c',
	'game/g_unlagged.c',
	'game/g_utils.c',
	'game/g_vehicles.c',
	'game/g_vehicleTurret.c',
	'game/g_weapon.c',
	'game/NPC.c',
	'game/NPC_AI_Atst.c',
	'game/NPC_AI_Default.c',
	'game/NPC_AI_Droid.c',
	'game/NPC_AI_GalakMech.c',
	'game/NPC_AI_Grenadier.c',
	'game/NPC_AI_Howler.c',
	'game/NPC_AI_ImperialProbe.c',
	'game/NPC_AI_Interrogator.c',
	'game/NPC_AI_Jedi.c',
	'game/NPC_AI_Mark1.c',
	'game/NPC_AI_Mark2.c',
	'game/NPC_AI_MineMonster.c',
	'game/NPC_AI_Rancor.c',
	'game/NPC_AI_Remote.c',
	'game/NPC_AI_Seeker.c',
	'game/NPC_AI_Sentry.c',
	'game/NPC_AI_Sniper.c',
	'game/NPC_AI_Stormtrooper.c',
	'game/NPC_AI_Utils.c',
	'game/NPC_AI_Wampa.c',
	'game/NPC_behavior.c',
	'game/NPC_combat.c',
	'game/NPC_goal.c',
	'game/NPC_misc.c',
	'game/NPC_move.c',
	'game/NPC_reactions.c',
	'game/NPC_senses.c',
	'game/NPC_sounds.c',
	'game/NPC_spawn.c',
	'game/NPC_stats.c',
	'game/NPC_utils.c',
	'game/SpeederNPC.c',
	'game/tri_coll_test.c',
	'game/w_force.c',
	'game/w_saber.c',
	'game/WalkerNPC.c',
	'JAPP/jp_crash.c',
	'JAPP/jp_promode.c',
	'JAPP/jp_stack.c',
	'JAPP/jp_tokenparser.c',
	'qcommon/md5.c',
	'qcommon/q_math.c',
	'qcommon/q_shared.c'
]
files = [build_dir + f for f in files]

# libraries
libraries = [
	'json',
	'lua'
]
if bits == 32:
	libraries += [ 'libudis86' ]
game_env['LIBS'] = [
	game_env.SConscript(
		'#/' + lib + '/SConscript',
		exports = [ 'arch', 'bits', 'build_dir', 'configuration', 'env', 'plat' ]
	) for lib in libraries
]

if plat == 'Windows' and bits == 32:
	game_env['LIBS'] += [ 'user32' ]

# project settings
game_env['CPPPATH'] += [ '#/game' ]
game_env['CPPDEFINES'] += [ '_GAME', 'JPLUA' ]
if plat == 'Linux':
	game_env['CPPDEFINES'] += [ 'LUA_USE_LINUX' ]
game_env['LIBPREFIX'] = ''

# targets
game_env.SharedLibrary( '#jampgame' + arch, files )
