Import( '*' )

# environment
build_dir = 'build' + '/' + configuration + '/' + env['CC'] + '/' + str(bits) + '/cgame/'
env.VariantDir( build_dir, '#', duplicate = 0 )
cgame_env = env.Clone()

# sources
files = [
	'cgame/cg_chatbox.c',
	'cgame/cg_consolecmds.c',
	'cgame/cg_draw.c',
	'cgame/cg_drawtools.c',
	'cgame/cg_effects.c',
	'cgame/cg_ents.c',
	'cgame/cg_event.c',
	'cgame/cg_info.c',
	'cgame/cg_light.c',
	'cgame/cg_localents.c',
	'cgame/cg_luaserver.c',
	'cgame/cg_main.c',
	'cgame/cg_marks.c',
	'cgame/cg_media.c',
	'cgame/cg_newDraw.c',
	'cgame/cg_newScoreboard.c',
	'cgame/cg_players.c',
	'cgame/cg_playerstate.c',
	'cgame/cg_predict.c',
	'cgame/cg_saga.c',
	'cgame/cg_scoreboard.c',
	'cgame/cg_servercmds.c',
	'cgame/cg_serverModification.c',
	'cgame/cg_smartentities.c',
	'cgame/cg_snapshot.c',
	'cgame/cg_syscalls.c',
	'cgame/cg_teambinds.c',
	'cgame/cg_trueview.c',
	'cgame/cg_turret.c',
	'cgame/cg_view.c',
	'cgame/cg_weaponinit.c',
	'cgame/cg_weapons.c',
	'cgame/fx_blaster.c',
	'cgame/fx_bowcaster.c',
	'cgame/fx_bryarpistol.c',
	'cgame/fx_demp2.c',
	'cgame/fx_disruptor.c',
	'cgame/fx_flechette.c',
	'cgame/fx_force.c',
	'cgame/fx_heavyrepeater.c',
	'cgame/fx_rocketlauncher.c',
	'game/AnimalNPC.c',
	'game/bg_g2_utils.c',
	'game/bg_lua.c',
	'game/bg_luacvar.c',
	'game/bg_luaevent.c',
	'game/bg_luafs.c',
	'game/bg_lualogger.c',
	'game/bg_luaplayer.c',
	'game/bg_luaserialiser.c',
	'game/bg_luavector.c',
	'game/bg_misc.c',
	'game/bg_panimate.c',
	'game/bg_pmove.c',
	'game/bg_saber.c',
	'game/bg_saberLoad.c',
	'game/bg_saga.c',
	'game/bg_slidemove.c',
	'game/bg_vehicleLoad.c',
	'game/bg_weapons.c',
	'game/FighterNPC.c',
	'game/SpeederNPC.c',
	'game/WalkerNPC.c',
	'JAPP/jp_crashExtra.c',
	'JAPP/jp_promode.c',
	'JAPP/jp_stack.c',
	'JAPP/jp_tokenparser.c',
	'ui/ui_shared.c',
	'qcommon/q_math.c',
	'qcommon/q_shared.c'
]
files = [build_dir + f for f in files]

# libraries
libraries = [
	'json',
	'lua'
]
cgame_env['LIBS'] = [
	cgame_env.SConscript(
		'#/' + lib + '/SConscript',
		exports = [ 'arch', 'bits', 'build_dir', 'configuration', 'env', 'plat' ]
	) for lib in libraries
]

if plat == 'Windows':
	cgame_env['LIBS'] += [ 'user32', 'Advapi32' ]

# project settings
cgame_env['CPPPATH'] += [ '#/cgame' ]
cgame_env['CPPDEFINES'] += [ '_CGAME', 'JPLUA' ]
if plat == 'Linux':
	cgame_env['CPPDEFINES'] += [ 'LUA_USE_LINUX' ]
cgame_env['LIBPREFIX'] = ''

# targets
cgame_env.SharedLibrary( '#cgame' + arch, files )
