Import("*")

# environment
env.VariantDir(build_dir, "#", duplicate=0)
lua_env = env.Clone()

# sources
files = [
    "lua/lapi.c",
    "lua/lauxlib.c",
    "lua/lbaselib.c",
    "lua/lbitlib.c",
    "lua/lcode.c",
    "lua/lcorolib.c",
    "lua/lctype.c",
    "lua/ldblib.c",
    "lua/ldebug.c",
    "lua/ldo.c",
    "lua/ldump.c",
    "lua/lfunc.c",
    "lua/lgc.c",
    "lua/linit.c",
    "lua/liolib.c",
    "lua/llex.c",
    "lua/lmathlib.c",
    "lua/lmem.c",
    "lua/loadlib.c",
    "lua/lobject.c",
    "lua/lopcodes.c",
    "lua/loslib.c",
    "lua/lparser.c",
    "lua/lstate.c",
    "lua/lstring.c",
    "lua/lstrlib.c",
    "lua/ltable.c",
    "lua/ltablib.c",
    "lua/ltm.c",
    "lua/lua.c",
    "lua/lundump.c",
    "lua/lutf8lib.c",
    "lua/lvm.c",
    "lua/lzio.c",
]
files = [build_dir + f for f in files]

# project settings
if "gcc" in env["CC"] or "clang" in env["CC"]:
    if target_plat != "Windows":
        lua_env["CCFLAGS"] += [
            "-fPIC",
        ]
    lua_env["CCFLAGS"] += [
        "-Wno-cast-qual",
    ]
    if "gcc" in env["CC"]:
        lua_env["CCFLAGS"] += [
            "-Wno-unsuffixed-float-constants",
        ]
if target_plat == "Linux":
    lua_env["CPPDEFINES"] += [
        "LUA_USE_LINUX",
    ]

lua_env["CPPDEFINES"] += [
    "LUA_COMPAT_BITLIB",
    "LUA_COMPAT_APIINTCASTS",
]

# targets
result = lua_env.StaticLibrary(build_dir + "liblua", files)
Return("result")
